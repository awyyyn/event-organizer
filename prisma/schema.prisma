// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  firstname String
  lastname  String
  photo     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders    Order[]  @relation(name: "Buyer")

  events  Event[] @relation(name: "EventBy")
}

model Event {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  location    String?
  imageUrl    String
  isFree      Boolean    @default(false)
  price       Int?
  url         String?
  startDate   DateTime
  endDate     DateTime
  orders      Order[]    @relation(name: "Event")
  
  categoryId  String   @unique @db.ObjectId
  category    Category @relation(name: "OrderCategory", fields: [categoryId], references: [id])

  startTime String
  endTime   String

  eventById String @db.ObjectId
  eventBy User @relation(name: "EventBy",  references: [id], fields: [eventById])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ordersIds String[] @db.ObjectId

  orders    Event[]  @relation(name: "OrderCategory" )
}

model Order {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  stripeId    String
  totalAmount Int?
  eventId     String   @unique @db.ObjectId
  event       Event    @relation(name: "Event", fields: [eventId], references: [id])
  buyerId     String   @unique @db.ObjectId
  buyer       User?    @relation(name: "Buyer", fields: [buyerId], references: [id])
  createdAt   DateTime @default(now())
}
